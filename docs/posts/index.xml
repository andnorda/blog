<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on nais blog</title>
    <link>https://nais.io/blog/posts.html</link>
    <description>Recent content in Posts on nais blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 29 Sep 2020 11:37:43 +0200</lastBuildDate><atom:link href="https://nais.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zero-trust networking in GCP</title>
      <link>https://nais.io/blog/posts/2020/09/zero-trust-networking-in-gcp.html</link>
      <pubDate>Tue, 29 Sep 2020 11:37:43 +0200</pubDate>
      
      <guid>https://nais.io/blog/posts/2020/09/zero-trust-networking-in-gcp.html</guid>
      <description>Background Firewalls and zones have been our primary defense mechanism for years. This model defines a strict perimeter around our applications. The perimiter is designed to keep potential attackers on the outside, but also to be able to control the flow of data out of the perimiter. The challenge with this model in a containerized world, is that our applications has become more distributed, which leaves us with more components and thus additional attack surfaces.</description>
    </item>
    
    <item>
      <title>OAuth del 2</title>
      <link>https://nais.io/blog/posts/2020/09/oauth-del-2.html</link>
      <pubDate>Wed, 16 Sep 2020 08:10:00 +0200</pubDate>
      
      <guid>https://nais.io/blog/posts/2020/09/oauth-del-2.html</guid>
      <description>Bakgrunn I NAV er OAuth og OIDC de facto standard for å løse autentisering og autorisering i appene våre. I en løst koblet verden med mikrotjenester og zero trust er det imidlertid flere brikker som må på plass. Hvordan kan man på en trygg måte kalle andre tjenester videre bakover i kjeden og samtidig bevare sluttbrukerkonteksten? Tidligere har man benyttet såkalte &amp;ldquo;systembrukere&amp;rdquo;, dvs brukere som identifiserer systemet/tjenesten som det kalles fra.</description>
    </item>
    
    <item>
      <title>OAuth del 1</title>
      <link>https://nais.io/blog/posts/2020/09/oauth-del-1.html</link>
      <pubDate>Thu, 10 Sep 2020 20:55:53 +0200</pubDate>
      
      <guid>https://nais.io/blog/posts/2020/09/oauth-del-1.html</guid>
      <description>Innledning Dette er del 1 av 2 om OAuth og OIDC, hva det er, hvilke problemer det løser og hvordan vi bruker det i NAV. Denne første delen forsøker å forklare og avmystifisere standardene litt. Del 2 tar for seg den nylig standardiserte Token Exchange-flyten og hvordan vi har løst den med TokenX.
Bakgrunn Håndtering av identiteter og autorisering av brukere er vanskelig å gjøre riktig. Vi har stadig flere kontoer og identiteter rundt omkring, og det er ikke uvanlig å ha hundrevis av brukernavn/passord-komboer å holde styr på.</description>
    </item>
    
  </channel>
</rss>
